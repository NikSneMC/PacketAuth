plugins {
    id 'java'
}

version = project.plugin_version
group = project.group

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    shade project(':common')
    implementation project(":common")
    compileOnly "org.spigotmc:spigot-api:1.18-R0.1-SNAPSHOT"
    compileOnly "net.md-5:bungeecord-api:1.18-R0.1-SNAPSHOT"
    compileOnly "com.velocitypowered:velocity-api:3.2.0-SNAPSHOT"
    annotationProcessor "com.velocitypowered:velocity-api:3.2.0-SNAPSHOT"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    inputs.property "version", version
    filteringCharset "UTF-8"
    filesMatching(["plugin.yml", "bungee.yml", "velocity-plugin.json"]) {
        expand "version": version
    }
}

jar {
    configurations.shade.each { dep ->
        duplicatesStrategy = DuplicatesStrategy.WARN
        from(project.zipTree(dep)) {
            exclude 'META-INF/MANIFEST.MF', 'module-info.class'
        }
    }
    archiveBaseName.set("PacketAuth")
    archiveClassifier.set("")
    archiveAppendix.set("BukkitBungeeVelocity")
}
